@using System.Security.Claims
@model StackFlow.ViewModels.UserReportsCombinedViewModel

@{
    ViewData["Title"] = "User Reports";

    // Get the active tab from query string or default to "activeUsers"
    var activeTab = Context.Request.Query["tab"].FirstOrDefault() ?? "activeUsers";

    // Active Users Pagination Data
    var activeCurrentPage = Model.ActiveUsersCurrentPage;
    var activePageSize = Model.ActiveUsersPageSize;
    var activeTotalPages = Model.ActiveUsersTotalPages;
    var activeSearchQuery = Model.ActiveUsersSearchQuery;

    // Pending Users Pagination Data
    var pendingCurrentPage = Model.PendingUsersCurrentPage;
    var pendingPageSize = Model.PendingUsersPageSize;
    var pendingTotalPages = Model.PendingUsersTotalPages;

    var currentUserId = ViewBag.CurrentUserId;
}

<div class="card shadow-lg border-0 rounded-4 p-4 mt-4 mb-4">
    <div class="card-header bg-transparent border-0 p-0 mb-4">
        <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center">
            <h2 class="fw-bold mb-3 mb-md-0">User Management</h2>
            <ul class="nav nav-tabs card-header-tabs d-flex flex-row" id="userReportsTabs" role="tablist">
                <li class="nav-item me-2" role="presentation">
                    <button class="nav-link @(activeTab == "activeUsers" ? "active" : "") rounded-pill"
                            id="active-users-tab" data-bs-toggle="tab"
                            data-bs-target="#activeUsersContent" type="button" role="tab"
                            aria-controls="activeUsersContent" aria-selected="@(activeTab == "activeUsers" ? "true" : "false")">
                        Active Users
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link @(activeTab == "pendingUsers" ? "active" : "") rounded-pill"
                            id="pending-users-tab" data-bs-toggle="tab"
                            data-bs-target="#pendingUsersContent" type="button" role="tab"
                            aria-controls="pendingUsersContent" aria-selected="@(activeTab == "pendingUsers" ? "true" : "false")">
                        Pending Verification
                    </button>
                </li>
            </ul>
        </div>
    </div>
    <div class="tab-content" id="userReportsTabsContent">
        @* Active Users Tab with Filters *@
        <div class="tab-pane fade @(activeTab == "activeUsers" ? "show active" : "")" id="activeUsersContent" role="tabpanel" aria-labelledby="active-users-tab">
            <h3 class="fw-bold text-secondary mb-3 mt-4">Active Users</h3>
            <div class="mb-3">
                <form asp-action="UserReports" method="get" class="d-flex" id="activeUserSearchForm">
                    <input type="hidden" name="activePageSize" value="@activePageSize" />
                    <input type="hidden" name="pendingPage" value="@pendingCurrentPage" />
                    <input type="hidden" name="pendingPageSize" value="@pendingPageSize" />
                    <input type="hidden" name="tab" value="activeUsers" />
                    <input type="text" name="searchQuery" id="activeUserLiveSearch" class="form-control rounded-pill me-2" placeholder="Search by username, email, or role..." value="@activeSearchQuery" />
                    <button type="submit" class="btn btn-primary rounded-pill"><i class="bi bi-search"></i> Search</button>
                    @if (!string.IsNullOrWhiteSpace(activeSearchQuery))
                    {
                        <a asp-action="UserReports" class="btn btn-outline-secondary rounded-pill ms-2"
                           asp-route-activePage="@activeCurrentPage"
                           asp-route-activePageSize="@activePageSize"
                           asp-route-pendingPage="@pendingCurrentPage"
                           asp-route-pendingPageSize="@pendingPageSize"
                           asp-route-tab="activeUsers">
                            <i class="bi bi-x-circle"></i> Clear
                        </a>
                    }
                </form>
            </div>
            @if (!Model.ActiveUsers.Any())
            {
                <div class="alert alert-info rounded-4 shadow-sm" role="alert">
                    <i class="bi bi-info-circle-fill me-2"></i> No active users found matching your criteria.
                </div>
            }
            else
            {
                <div class="table-responsive rounded-4 shadow-sm mb-3">
                    <table class="table table-hover table-bordered mb-0" id="activeUserReportsTable">
                        <thead class="table-primary text-white">
                            <tr>
                                <th scope="col">Username</th>
                                <th scope="col">Email</th>
                                <th scope="col" class="filter-header">
                                    Role
                                    <select class="form-select form-select-sm mt-1 header-filter" data-column="2" id="roleFilter">
                                        <option value="">All</option>
                                        @foreach (var role in Model.ActiveUsers.Select(u => u.User.Role?.Name).Distinct())
                                        {
                                            <option value="@role">@role</option>
                                        }
                                    </select>
                                </th>
                                <th scope="col" class="filter-header">
                                    Total Tickets
                                    <select class="form-select form-select-sm mt-1 header-filter" data-column="3" id="totalTicketsFilter">
                                        <option value="">All</option>
                                        <option value="0">0</option>
                                        <option value="1-5">1-5</option>
                                        <option value="6-10">6-10</option>
                                        <option value="10+">10+</option>
                                    </select>
                                </th>
                                <th scope="col" class="filter-header">
                                    To Do
                                    <select class="form-select form-select-sm mt-1 header-filter" data-column="4" id="todoFilter">
                                        <option value="">All</option>
                                        <option value="0">0</option>
                                        <option value="1+">1+</option>
                                    </select>
                                </th>
                                <th scope="col" class="filter-header">
                                    In Progress
                                    <select class="form-select form-select-sm mt-1 header-filter" data-column="5" id="inProgressFilter">
                                        <option value="">All</option>
                                        <option value="0">0</option>
                                        <option value="1+">1+</option>
                                    </select>
                                </th>
                                <th scope="col" class="filter-header">
                                    In Review
                                    <select class="form-select form-select-sm mt-1 header-filter" data-column="6" id="inReviewFilter">
                                        <option value="">All</option>
                                        <option value="0">0</option>
                                        <option value="1+">1+</option>
                                    </select>
                                </th>
                                <th scope="col" class="filter-header">
                                    Completed
                                    <select class="form-select form-select-sm mt-1 header-filter" data-column="7" id="completedFilter">
                                        <option value="">All</option>
                                        <option value="0">0</option>
                                        <option value="1+">1+</option>
                                    </select>
                                </th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var report in Model.ActiveUsers)
                            {
                                <tr id="user-row-@report.User.Id" class="user-row">
                                    <td>@report.User.Name</td>
                                    <td>@report.User.Email</td>
                                    <td class="role-cell">@report.User.Role?.Name</td>
                                    <td class="@(report.TotalTicketsAssigned == 0 ? "text-muted" : "text-primary fw-bold") total-tickets-cell">
                                        @report.TotalTicketsAssigned
                                    </td>
                                    <td class="@(report.ToDoTicketsAssigned > 0 ? "text-danger fw-bold" : "text-muted") todo-tickets-cell">
                                        @report.ToDoTicketsAssigned
                                    </td>
                                    <td class="@(report.InProgressTicketsAssigned > 0 ? "text-warning fw-bold" : "text-muted") inprogress-tickets-cell">
                                        @report.InProgressTicketsAssigned
                                    </td>
                                    <td class="@(report.InReviewTicketsAssigned > 0 ? "text-info fw-bold" : "text-muted") inreview-tickets-cell">
                                        @report.InReviewTicketsAssigned
                                    </td>
                                    <td class="@(report.CompletedTicketsAssigned > 0 ? "text-success fw-bold" : "text-muted") completed-tickets-cell">
                                        @report.CompletedTicketsAssigned
                                    </td>
                                    <td>
                                        @if (report.User.Id != currentUserId)
                                        {
                                            <div class="d-flex flex-column flex-md-row align-items-stretch align-items-md-center gap-2">
                                                <form asp-action="UpdateUserRole" asp-controller="Report" method="post" class="d-inline-flex flex-grow-1" data-user-id="@report.User.Id">
                                                    <input type="hidden" name="userId" value="@report.User.Id" />
                                                    <input type="hidden" name="activePage" value="@activeCurrentPage" />
                                                    <input type="hidden" name="activePageSize" value="@activePageSize" />
                                                    <input type="hidden" name="searchQuery" value="@activeSearchQuery" />
                                                    <input type="hidden" name="pendingPage" value="@pendingCurrentPage" />
                                                    <input type="hidden" name="pendingPageSize" value="@pendingPageSize" />
                                                    <input type="hidden" name="tab" value="activeUsers" />
                                                    <select name="newRoleId" class="form-select form-select-sm rounded-pill" onchange="this.form.submit()">
                                                        @foreach (var role in ViewBag.Roles as SelectList)
                                                        {
                                                            <option value="@role.Value" selected="@(role.Value == report.User.Role_Id.ToString())">@role.Text</option>
                                                        }
                                                    </select>
                                                </form>

                                                <button type="button" class="btn btn-sm btn-outline-danger rounded-pill animate-btn"
                                                        data-bs-toggle="modal" data-bs-target="#softDeleteUserModal_@report.User.Id">
                                                    <i class="bi bi-person-x"></i> Delete
                                                </button>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted fst-italic">Current User</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @* Pagination *@
                <nav aria-label="Active Users Page navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(activeCurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link rounded-pill mx-1" href="@Url.Action("UserReports", new { activePage = activeCurrentPage - 1, activePageSize = activePageSize, searchQuery = activeSearchQuery, pendingPage = pendingCurrentPage, pendingPageSize = pendingPageSize, tab = "activeUsers" })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        @for (int i = 1; i <= activeTotalPages; i++)
                        {
                            <li class="page-item @(i == activeCurrentPage ? "active" : "")">
                                <a class="page-link rounded-pill mx-1" href="@Url.Action("UserReports", new { activePage = i, activePageSize = activePageSize, searchQuery = activeSearchQuery, pendingPage = pendingCurrentPage, pendingPageSize = pendingPageSize, tab = "activeUsers" })">@i</a>
                            </li>
                        }
                        <li class="page-item @(activeCurrentPage == activeTotalPages ? "disabled" : "")">
                            <a class="page-link rounded-pill mx-1" href="@Url.Action("UserReports", new { activePage = activeCurrentPage + 1, activePageSize = activePageSize, searchQuery = activeSearchQuery, pendingPage = pendingCurrentPage, pendingPageSize = pendingPageSize, tab = "activeUsers" })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>

        @* Pending Users Tab (without filters) *@
        <div class="tab-pane fade @(activeTab == "pendingUsers" ? "show active" : "")" id="pendingUsersContent" role="tabpanel" aria-labelledby="pending-users-tab">
            <h3 class="fw-bold text-secondary mb-3 mt-5">Pending Verification Users</h3>

            @if (!Model.PendingUsers.Any())
            {
                <div class="alert alert-info rounded-4 shadow-sm" role="alert">
                    <i class="bi bi-info-circle-fill me-2"></i> No users pending verification.
                </div>
            }
            else
            {
                <div class="mb-3">
                    <input type="text" id="pendingUserLiveSearch" class="form-control rounded-pill" placeholder="Search pending users..." />
                </div>

                <div class="table-responsive rounded-4 shadow-sm mb-3">
                    <table class="table table-hover table-bordered mb-0" id="pendingUserReportsTable">
                        <thead class="table-warning text-dark">
                            <tr>
                                <th scope="col">Username</th>
                                <th scope="col">Email</th>
                                <th scope="col">Registered At</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var report in Model.PendingUsers)
                            {
                                <tr class="pending-user-row">
                                    <td>@report.User.Name</td>
                                    <td>@report.User.Email</td>
                                    <td>@report.User.Created_At.ToShortDateString()</td>
                                    <td>
                                        <div class="d-flex flex-column flex-md-row align-items-stretch align-items-md-center gap-2">
                                            <form asp-action="VerifyUser" asp-controller="Report" method="post" class="d-inline-block">
                                                <input type="hidden" name="id" value="@report.User.Id" />
                                                <input type="hidden" name="activePage" value="@activeCurrentPage" />
                                                <input type="hidden" name="activePageSize" value="@activePageSize" />
                                                <input type="hidden" name="searchQuery" value="@activeSearchQuery" />
                                                <input type="hidden" name="pendingPage" value="@pendingCurrentPage" />
                                                <input type="hidden" name="pendingPageSize" value="@pendingPageSize" />
                                                <input type="hidden" name="tab" value="pendingUsers" />
                                                <button type="submit" class="btn btn-sm btn-success rounded-pill animate-btn">
                                                    <i class="bi bi-check-circle"></i> Verify
                                                </button>
                                            </form>

                                            <button type="button" class="btn btn-sm btn-outline-danger rounded-pill animate-btn"
                                                    data-bs-toggle="modal" data-bs-target="#softDeleteUserModal_@report.User.Id">
                                                <i class="bi bi-person-x"></i> Delete
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @* Pagination *@
                <nav aria-label="Pending Users Page navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(pendingCurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link rounded-pill mx-1" href="@Url.Action("UserReports", new { activePage = activeCurrentPage, activePageSize = activePageSize, searchQuery = activeSearchQuery, pendingPage = pendingCurrentPage - 1, pendingPageSize = pendingPageSize, tab = "pendingUsers" })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        @for (int i = 1; i <= pendingTotalPages; i++)
                        {
                            <li class="page-item @(i == pendingCurrentPage ? "active" : "")">
                                <a class="page-link rounded-pill mx-1" href="@Url.Action("UserReports", new { activePage = activeCurrentPage, activePageSize = activePageSize, searchQuery = activeSearchQuery, pendingPage = i, pendingPageSize = pendingPageSize, tab = "pendingUsers" })">@i</a>
                            </li>
                        }
                        <li class="page-item @(pendingCurrentPage == pendingTotalPages ? "disabled" : "")">
                            <a class="page-link rounded-pill mx-1" href="@Url.Action("UserReports", new { activePage = activeCurrentPage, activePageSize = activePageSize, searchQuery = activeSearchQuery, pendingPage = pendingCurrentPage + 1, pendingPageSize = pendingPageSize, tab = "pendingUsers" })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Active Users Table Filtering
            function filterActiveUsers() {
                const roleFilter = $('#roleFilter').val().toLowerCase();
                const totalTicketsFilter = $('#totalTicketsFilter').val();
                const todoFilter = $('#todoFilter').val();
                const inProgressFilter = $('#inProgressFilter').val();
                const inReviewFilter = $('#inReviewFilter').val();
                const completedFilter = $('#completedFilter').val();

                $('.user-row').each(function() {
                    const $row = $(this);
                    const role = $row.find('.role-cell').text().toLowerCase();
                    const totalTickets = parseInt($row.find('.total-tickets-cell').text());
                    const todoTickets = parseInt($row.find('.todo-tickets-cell').text());
                    const inProgressTickets = parseInt($row.find('.inprogress-tickets-cell').text());
                    const inReviewTickets = parseInt($row.find('.inreview-tickets-cell').text());
                    const completedTickets = parseInt($row.find('.completed-tickets-cell').text());

                    // Role filter
                    const roleMatch = !roleFilter || role.includes(roleFilter);

                    // Total tickets filter
                    let totalTicketsMatch = true;
                    if (totalTicketsFilter) {
                        if (totalTicketsFilter === "0") {
                            totalTicketsMatch = totalTickets === 0;
                        } else if (totalTicketsFilter === "1-5") {
                            totalTicketsMatch = totalTickets >= 1 && totalTickets <= 5;
                        } else if (totalTicketsFilter === "6-10") {
                            totalTicketsMatch = totalTickets >= 6 && totalTickets <= 10;
                        } else if (totalTicketsFilter === "10+") {
                            totalTicketsMatch = totalTickets > 10;
                        }
                    }

                    // Todo tickets filter
                    let todoMatch = true;
                    if (todoFilter === "0") {
                        todoMatch = todoTickets === 0;
                    } else if (todoFilter === "1+") {
                        todoMatch = todoTickets > 0;
                    }

                    // In Progress tickets filter
                    let inProgressMatch = true;
                    if (inProgressFilter === "0") {
                        inProgressMatch = inProgressTickets === 0;
                    } else if (inProgressFilter === "1+") {
                        inProgressMatch = inProgressTickets > 0;
                    }

                    // In Review tickets filter
                    let inReviewMatch = true;
                    if (inReviewFilter === "0") {
                        inReviewMatch = inReviewTickets === 0;
                    } else if (inReviewFilter === "1+") {
                        inReviewMatch = inReviewTickets > 0;
                    }

                    // Completed tickets filter
                    let completedMatch = true;
                    if (completedFilter === "0") {
                        completedMatch = completedTickets === 0;
                    } else if (completedFilter === "1+") {
                        completedMatch = completedTickets > 0;
                    }

                    // Show/hide based on all filters
                    if (roleMatch && totalTicketsMatch && todoMatch && inProgressMatch && inReviewMatch && completedMatch) {
                        $row.show();
                    } else {
                        $row.hide();
                    }
                });
            }

            // Attach event handlers to all active users filters
            $('.header-filter').change(filterActiveUsers);

            // Pending Users Live Search
            $('#pendingUserLiveSearch').on('keyup', function() {
                const searchText = $(this).val().toLowerCase();
                $('.pending-user-row').each(function() {
                    const $row = $(this);
                    const username = $row.find('td:eq(0)').text().toLowerCase();
                    const email = $row.find('td:eq(1)').text().toLowerCase();
                    const date = $row.find('td:eq(2)').text().toLowerCase();

                    if (username.includes(searchText) || email.includes(searchText) || date.includes(searchText)) {
                        $row.show();
                    } else {
                        $row.hide();
                    }
                });
            });
        });
    </script>
}