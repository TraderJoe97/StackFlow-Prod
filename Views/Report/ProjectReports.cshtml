@model IEnumerable<StackFlow.ViewModels.ProjectReportViewModel>

@{
    ViewData["Title"] = "Project Reports";
    // Get pagination data from ViewBag
    var currentPage = ViewBag.CurrentPage;
    var pageSize = ViewBag.PageSize;
    var totalPages = ViewBag.TotalPages;
}

<div class="card shadow-lg border-0 rounded-4 p-4 mt-4 mb-4">
    <div class="d-flex justify-content-between align-items-start mb-3">
        <h2 class="card-title mb-0 fw-bold text-primary display-6">
            <i class="bi bi-bar-chart-fill me-2"></i> Project Reports
        </h2>
        <a asp-action="Index" asp-controller="Dashboard" class="btn btn-outline-secondary rounded-pill shadow-sm animate-btn">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Dashboard
        </a>
    </div>
    <hr class="mb-4" />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-x-circle-fill me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info rounded-4 shadow-sm" role="alert">
            <i class="bi bi-info-circle-fill me-2"></i> No projects available for reporting.
        </div>
    }
    else
    {
        <div class="table-responsive rounded-4 shadow-sm mb-3">
            <table class="table table-hover table-bordered mb-0">
                <thead class="table-primary text-white">
                    <tr>
                        <th scope="col">Project Name</th>
                        <th scope="col">Status</th>
                        <th scope="col">Total Tickets</th>
                        <th scope="col">To Do</th>
                        <th scope="col">In Progress</th>
                        <th scope="col">In Review</th>
                        <th scope="col">Completed</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var report in Model)
                    {
                        <tr>
                            <td>@report.Project.Name</td>
                            <td>
                                <span class="badge rounded-pill
                                            @(report.Project.Status == "Active" ? "bg-success" :
                                                                            report.Project.Status == "On Hold" ? "bg-warning text-dark" : "bg-secondary")">
                            @report.Project.Status
                        </span>
                    </td>
                    <td>@report.TotalTickets</td>
                    <td>@report.ToDoTickets</td>
                    <td>@report.InProgressTickets</td>
                    <td>@report.InReviewTickets</td>
                    <td>@report.CompletedTickets</td>
                </tr>
                                }
                </tbody>
            </table>
        </div>

        @* Pagination Controls *@
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link rounded-pill mx-1" href="@Url.Action("ProjectReports", new { page = currentPage - 1, pageSize = pageSize })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link rounded-pill mx-1" href="@Url.Action("ProjectReports", new { page = i, pageSize = pageSize })">@i</a>
                    </li>
                }
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link rounded-pill mx-1" href="@Url.Action("ProjectReports", new { page = currentPage + 1, pageSize = pageSize })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

@section Styles {
    <style>
        .animate-btn {
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

            .animate-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 12px rgba(0,0,0,0.15);
            }

        .pagination .page-link {
            border-radius: 50rem !important;
            margin: 0 0.25rem;
            min-width: 38px; /* Ensure consistent width for pagination buttons */
            text-align: center;
        }

        .pagination .page-item.active .page-link {
            background-color: var(--bs-primary);
            border-color: var(--bs-primary);
            color: var(--bs-white);
        }

        [data-bs-theme="dark"] .pagination .page-item .page-link {
            background-color: var(--bs-card-bg);
            border-color: var(--bs-border-color);
            color: var(--bs-body-color);
        }

            [data-bs-theme="dark"] .pagination .page-item .page-link:hover {
                background-color: var(--bs-sidebar-active-bg);
                border-color: var(--bs-sidebar-active-bg);
            }

        [data-bs-theme="dark"] .pagination .page-item.active .page-link {
            background-color: var(--bs-primary);
            border-color: var(--bs-primary);
            color: var(--bs-white);
        }
    </style>
}
