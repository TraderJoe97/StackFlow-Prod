@model IEnumerable<StackFlow.Controllers.UserReportsController.UserReportViewModel>

@{
    ViewData["Title"] = "User Reports";
}

<div class="card shadow-lg border-0 rounded-4 p-4 mt-4 mb-4">
    <div class="d-flex justify-content-between align-items-start mb-3">
        <h2 class="card-title mb-0 fw-bold text-primary display-6">
            <i class="bi bi-file-earmark-person-fill me-2"></i> User Reports
        </h2>
        @* Back to Dashboard button - adjust asp-controller and asp-action if your dashboard is elsewhere *@
        <a asp-action="Index" asp-controller="Dashboard" class="btn btn-outline-secondary rounded-pill shadow-sm animate-btn">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Dashboard
        </a>
    </div>
    <hr class="mb-4" />

    @* You can add TempData messages here if needed later, based on your application's flow *@
    @*
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-x-circle-fill me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    *@

    @if (Model == null || !Model.Any())
{
        <div class="alert alert-info rounded-4 shadow-sm" role="alert">
            <i class="bi bi-info-circle-fill me-2"></i> No users available for reporting.
        </div>
    }
    else
    {
        <div class="table-responsive rounded-4 shadow-sm">
            <table class="table table-hover table-bordered mb-0">
                <thead class="table-primary text-white">
                    <tr>
                        <th scope="col">Username</th>
                        <th scope="col">Email</th>
                        <th scope="col">Role</th>
                        <th scope="col">Total Assigned Tickets</th>
                        <th scope="col">To Do</th>
                        <th scope="col">In Progress</th>
                        <th scope="col">In Review</th>
                        <th scope="col">Completed</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var report in Model)
                    {
                        <tr>
                            <td>@report.User.Username</td>
                            <td>@report.User.Email</td>
                            <td>@report.User.Role?.Title</td> @* Assuming Role has a Title property *@
                            <td>@report.TotalTicketsAssigned</td>
                            <td>@report.ToDoTicketsAssigned</td>
                            <td>@report.InProgressTicketsAssigned</td>
                            <td>@report.InReviewTicketsAssigned</td>
                            <td>@report.CompletedTicketsAssigned</td>
                            <td>
                                <button type="button" class="btn btn-sm btn-info" data-bs-toggle="modal" data-bs-target="#taskDetailsModal" data-user-id="@report.User.Id">Details</button>
                                <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#editUserModal" data-user-id="@report.User.Id">Edit</button>
                                <button type="button" class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#deleteUserModal_@report.User.Id">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @* Task details per user could be added here, perhaps in expandable rows or a separate section *@
        @* Example of displaying tasks per user (optional - uncomment and adjust as needed) *@
        @*
        <div class="mt-4">
            <h3>Task Details per User</h3>
            @foreach (var report in Model)
            {
                <h4>@report.User.Username's Tasks:</h4>
                @if (report.User.Tickets != null && report.User.Tickets.Any())
                {
                    <ul class="list-group list-group-flush mb-3">
                        @foreach (var ticket in report.User.Tickets)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                @ticket.Title
                                <span class="badge bg-secondary rounded-pill">@ticket.Status</span>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>No tasks assigned.</p>
                }
            }
        </div>
        *@
    }
}

@* Modals and Scripts section are omitted as requested *@
@*
@foreach (var report in Model)
... modal definitions ...
}

@section Scripts {
... script content ...
}
*@

@* Note: You might need to add Bootstrap icons if you are using them and they are not already included in your layout. *@
@* Example: <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"> *@

@* Note: Ensure your User and Ticket models have the necessary properties and navigation properties for this view to work correctly. *@
@* Specifically, User should have a Tickets navigation property, and Ticket should have properties like Title and Status. *@
@* The User model should also have a Role navigation property if you want to display the role title. *@


        {
            <ul>
                @foreach (var ticket in user.Tickets)
                {
                    <li>@ticket.Title - Status: @ticket.Status</li>
                }
            </ul>
        }
        else
        {
            <p>No tasks assigned.</p>
        }
        <hr />
    }
}
else
{
    <p>No users found.</p>
}