@model StackFlow.Models.User

@{
    ViewData["Title"] = "Edit User";
    // Ensure ViewBag.Roles is cast correctly to IEnumerable<SelectListItem>
    var roles = ViewBag.Roles as IEnumerable<SelectListItem>;
}

<div class="card shadow-lg border-0 rounded-4 p-4 mt-4 mb-4">
    <div class="d-flex justify-content-between align-items-start mb-3">
        <h2 class="card-title mb-0 fw-bold text-primary display-6">
            <i class="bi bi-pencil-square me-2"></i> Edit User: @Model.Name
        </h2>
        <a asp-action="Index" asp-controller="UserReports" class="btn btn-outline-secondary rounded-pill shadow-sm animate-btn">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to User Reports
        </a>
    </div>
    <hr class="mb-4" />

    @* --- TempData Message Display --- *@
    @* These alerts will appear if the controller sets TempData["SuccessMessage"] or TempData["ErrorMessage"] *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @* --- End TempData Message Display --- *@

    <div class="row">
        <div class="col-md-6">
            <form asp-action="EditUser" asp-controller="Admin" asp-route-id="@Model.Id" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                @* Hidden field for Id, crucial for POST to identify which user to update *@
                <input type="hidden" asp-for="Id" />

                @*
                    Assuming CreationDate and PasswordHash are NOT editable via this form
                    and therefore are NOT included in the [Bind] attribute in the POST method.
                    If they WERE in [Bind] but not editable, you'd add hidden fields:
                    <input type="hidden" asp-for="CreationDate" />
                    <input type="hidden" asp-for="PasswordHash" />
                *@

                <div class="mb-3">
                    <label asp-for="Name" class="form-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Role_Id" class="form-label">Role</label>
                    @* The asp-for="Role_Id" binds the selected value to the User.Role_Id property *@
                    @* The asp-items="roles" populates the options from ViewBag.Roles *@
                    <select asp-for="Role_Id" class="form-select" asp-items="@roles">
                        <option value="">-- Select Role --</option> @* Optional: A default "select" option *@
                    </select>
                    <span asp-validation-for="Role_Id" class="text-danger"></span>
                </div>

                <div class="mb-3 form-check">
                    <input class="form-check-input" asp-for="IsActive" />
                    <label class="form-check-label" asp-for="IsActive"></label>
                </div>

                <button type="submit" class="btn btn-primary rounded-pill shadow-sm animate-btn">
                    <i class="bi bi-check-circle me-1"></i> Save Changes
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}