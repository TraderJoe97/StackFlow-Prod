@model StackFlow.Models.Ticket

@{
    ViewBag.Title = "Create Ticket";
}

<h2>Create Ticket</h2>

@* Begin form for ticket creation, including anti-forgery protection *@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ticket</h4>
        <hr />
        @* Display any validation summary errors *@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @* Title input field *@
        <div class="form-group">
            @Html.LabelFor(m => m.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Description text area *@
        <div class="form-group">
            @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 4 })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Due Date picker *@
        <div class="form-group">
            @Html.LabelFor(m => m.Due_Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Due_Date, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(m => m.Due_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Priority dropdown (based on TicketPriority enum) *@
        <div class="form-group">
            @Html.LabelFor(m => m.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Priority, new SelectList(Enum.GetNames(typeof(StackFlow.Models.TicketPriority))), "Select Priority", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Status dropdown (based on TicketStatus enum) *@
        <div class="form-group">
            @Html.LabelFor(m => m.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Status, new SelectList(Enum.GetNames(typeof(StackFlow.Models.TicketStatus))), "Select Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Dropdown for assigning the ticket to a user (optional) *@
        <div class="form-group">
            @Html.LabelFor(m => m.Assigned_To, "Assigned To", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Assigned_To, ViewBag.AssignedToList as SelectList, "Unassigned", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Assigned_To, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Dropdown to choose the project the ticket belongs to *@
        <div class="form-group">
            @Html.LabelFor(m => m.Project_Id, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Project_Id, ViewBag.ProjectList as SelectList, "Select Project", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Project_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Submit and Back buttons *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary button" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Styles {
    <link rel="stylesheet" href="~/css/Ticket.css" />
}

